/* Defining the keyframes, which will be used in the animation */

@keyframes bounce {
    0% {
      top: -25%;
      /* CSS has some awesome built-in easing functions */
      animation-timing-function: ease-in;
    }
  
    50% {
      top: 100%;
      animation-timing-function: ease-out;
    }
  
    100% {
      top: -25%;
      animation-timing-function: ease-in;
    }
  }
  
  .ball {
    position: absolute;
  
    /* rem is a relative unit of measurement */
    width: 5rem;
    height: 5rem;
    left: 20%;
  
    /* half the width */
    margin-left: -2.5rem;
  
    /* so it appears on top of the background */
    z-index: 1;
  
    /* animation-name, duration, delay, iteration-count */
    animation: bounce 2s 1s infinite;
  
    /* fill mode is a CSS3 property that allows you to define 
      how the element should look like before and after the animation */
    animation-fill-mode: both;
  
    /* color should change */
    background-color: rgb(79, 122, 215);
  
    /* border-radius is a CSS3 property that allows you to round the corners of an element */
    border-radius: 50%;
  }
  
  /* TODO 3: Complete the remaining shapes. Hints contained in the README.md file. */
  .square {
    position: absolute;
  
    /* rem is a relative unit of measurement */
    width: 5rem;
    height: 5rem;
    left: 30%;
    
    /* half the width */
    margin-left: -2.5rem;
  
    /* so it appears on top of the background */
    z-index: 10;
  
    /* animation-name, duration, delay, iteration-count */
    animation: bounce 2s 1s infinite;
  
    /* fill mode is a CSS3 property that allows you to define 
      how the element should look like before and after the animation */
    animation-fill-mode: both;
  
    /* color should change */
    background-color: rgb(151, 122, 215);
  }
  
  .triangle {
    position: absolute;
  
    /* rem is a relative unit of measurement */
    width: 0rem;
    height: 0rem;
    border-style: solid;
    border-width: 0 2.5rem 4.33rem 2.5rem;
    border-color: transparent transparent rgb(255,0,0) transparent;
    transform: rotate(0deg);
    left: 40%;
  
    /* half the width */
    margin-left: -2.5rem;
    
    /* so it appears on top of the background */
    z-index: 1;
  
    /* animation-name, duration, delay, iteration-count */
    animation: bounce 2s 1s infinite;
  
    /* fill mode is a CSS3 property that allows you to define 
      how the element should look like before and after the animation */
    animation-fill-mode: both;
  }
  
  
  .hexagon {
    position: absolute;
  
    /* rem is a relative unit of measurement */
    margin-top: 1.875rem;
    width: 6.5em;
    height: 3.75rem;
    background-color: rgb(0,128,0);
    border-color: rgb(0,128,0);
    left: 50%;
  
    /* half the width */
    margin-left: -2.5rem;
  
    /* so it appears on top of the background */
    z-index: 1;
  
    /* animation-name, duration, delay, iteration-count */
    animation: bounce 2s 1s infinite;
  
    /* fill mode is a CSS3 property that allows you to define 
      how the element should look like before and after the animation */
    animation-fill-mode: both;
  }
  .hexagon:before {
      content: " ";
      width: 0; height: 0;
      border-bottom: 1.875rem solid;
      border-color: inherit;
      border-left: 3.25rem solid transparent;
      border-right: 3.25rem solid transparent;
      position: absolute;
      top: -1.875rem;
  }
  .hexagon:after {
      content: "";
      width: 0rem;
      position: absolute;
      bottom: -1.875rem;
      border-top: 1.875rem solid;
      border-color: inherit;
      border-left: 3.25rem solid transparent;
      border-right: 3.25rem solid transparent;
  }